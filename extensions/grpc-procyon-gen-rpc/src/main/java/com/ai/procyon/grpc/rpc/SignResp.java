// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: notary.proto

package com.ai.procyon.grpc.rpc;

/**
 * Protobuf type {@code rpc.SignResp}
 */
public final class SignResp extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:rpc.SignResp)
    SignRespOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SignResp.newBuilder() to construct.
  private SignResp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SignResp() {
    certType_ = "";
    certificate_ = "";
    infraInterCert_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new SignResp();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SignResp(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            String s = input.readStringRequireUtf8();

            certType_ = s;
            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();

            certificate_ = s;
            break;
          }
          case 26: {
            String s = input.readStringRequireUtf8();

            infraInterCert_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return RPCProto.internal_static_rpc_SignResp_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return RPCProto.internal_static_rpc_SignResp_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            SignResp.class, Builder.class);
  }

  public static final int CERTTYPE_FIELD_NUMBER = 1;
  private volatile Object certType_;
  /**
   * <pre>
   * type of certificate (x509 or ssh)
   * </pre>
   *
   * <code>string CertType = 1;</code>
   * @return The certType.
   */
  @Override
  public String getCertType() {
    Object ref = certType_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      certType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * type of certificate (x509 or ssh)
   * </pre>
   *
   * <code>string CertType = 1;</code>
   * @return The bytes for certType.
   */
  @Override
  public com.google.protobuf.ByteString
      getCertTypeBytes() {
    Object ref = certType_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      certType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CERTIFICATE_FIELD_NUMBER = 2;
  private volatile Object certificate_;
  /**
   * <pre>
   * issued certificate
   * </pre>
   *
   * <code>string Certificate = 2;</code>
   * @return The certificate.
   */
  @Override
  public String getCertificate() {
    Object ref = certificate_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      certificate_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * issued certificate
   * </pre>
   *
   * <code>string Certificate = 2;</code>
   * @return The bytes for certificate.
   */
  @Override
  public com.google.protobuf.ByteString
      getCertificateBytes() {
    Object ref = certificate_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      certificate_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INFRAINTERCERT_FIELD_NUMBER = 3;
  private volatile Object infraInterCert_;
  /**
   * <pre>
   * infra intermediate cert
   * </pre>
   *
   * <code>string InfraInterCert = 3;</code>
   * @return The infraInterCert.
   */
  @Override
  public String getInfraInterCert() {
    Object ref = infraInterCert_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      infraInterCert_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * infra intermediate cert
   * </pre>
   *
   * <code>string InfraInterCert = 3;</code>
   * @return The bytes for infraInterCert.
   */
  @Override
  public com.google.protobuf.ByteString
      getInfraInterCertBytes() {
    Object ref = infraInterCert_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      infraInterCert_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getCertTypeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, certType_);
    }
    if (!getCertificateBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, certificate_);
    }
    if (!getInfraInterCertBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, infraInterCert_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getCertTypeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, certType_);
    }
    if (!getCertificateBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, certificate_);
    }
    if (!getInfraInterCertBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, infraInterCert_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof SignResp)) {
      return super.equals(obj);
    }
    SignResp other = (SignResp) obj;

    if (!getCertType()
        .equals(other.getCertType())) return false;
    if (!getCertificate()
        .equals(other.getCertificate())) return false;
    if (!getInfraInterCert()
        .equals(other.getInfraInterCert())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CERTTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getCertType().hashCode();
    hash = (37 * hash) + CERTIFICATE_FIELD_NUMBER;
    hash = (53 * hash) + getCertificate().hashCode();
    hash = (37 * hash) + INFRAINTERCERT_FIELD_NUMBER;
    hash = (53 * hash) + getInfraInterCert().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static SignResp parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static SignResp parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static SignResp parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static SignResp parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static SignResp parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static SignResp parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static SignResp parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static SignResp parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static SignResp parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static SignResp parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static SignResp parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static SignResp parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(SignResp prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code rpc.SignResp}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:rpc.SignResp)
      SignRespOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RPCProto.internal_static_rpc_SignResp_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RPCProto.internal_static_rpc_SignResp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SignResp.class, Builder.class);
    }

    // Construct using com.ai.procyon.grpc.rpc.SignResp.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      certType_ = "";

      certificate_ = "";

      infraInterCert_ = "";

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return RPCProto.internal_static_rpc_SignResp_descriptor;
    }

    @Override
    public SignResp getDefaultInstanceForType() {
      return SignResp.getDefaultInstance();
    }

    @Override
    public SignResp build() {
      SignResp result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public SignResp buildPartial() {
      SignResp result = new SignResp(this);
      result.certType_ = certType_;
      result.certificate_ = certificate_;
      result.infraInterCert_ = infraInterCert_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof SignResp) {
        return mergeFrom((SignResp)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(SignResp other) {
      if (other == SignResp.getDefaultInstance()) return this;
      if (!other.getCertType().isEmpty()) {
        certType_ = other.certType_;
        onChanged();
      }
      if (!other.getCertificate().isEmpty()) {
        certificate_ = other.certificate_;
        onChanged();
      }
      if (!other.getInfraInterCert().isEmpty()) {
        infraInterCert_ = other.infraInterCert_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      SignResp parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (SignResp) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private Object certType_ = "";
    /**
     * <pre>
     * type of certificate (x509 or ssh)
     * </pre>
     *
     * <code>string CertType = 1;</code>
     * @return The certType.
     */
    public String getCertType() {
      Object ref = certType_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        certType_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * type of certificate (x509 or ssh)
     * </pre>
     *
     * <code>string CertType = 1;</code>
     * @return The bytes for certType.
     */
    public com.google.protobuf.ByteString
        getCertTypeBytes() {
      Object ref = certType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        certType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * type of certificate (x509 or ssh)
     * </pre>
     *
     * <code>string CertType = 1;</code>
     * @param value The certType to set.
     * @return This builder for chaining.
     */
    public Builder setCertType(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      certType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * type of certificate (x509 or ssh)
     * </pre>
     *
     * <code>string CertType = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCertType() {
      
      certType_ = getDefaultInstance().getCertType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * type of certificate (x509 or ssh)
     * </pre>
     *
     * <code>string CertType = 1;</code>
     * @param value The bytes for certType to set.
     * @return This builder for chaining.
     */
    public Builder setCertTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      certType_ = value;
      onChanged();
      return this;
    }

    private Object certificate_ = "";
    /**
     * <pre>
     * issued certificate
     * </pre>
     *
     * <code>string Certificate = 2;</code>
     * @return The certificate.
     */
    public String getCertificate() {
      Object ref = certificate_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        certificate_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * issued certificate
     * </pre>
     *
     * <code>string Certificate = 2;</code>
     * @return The bytes for certificate.
     */
    public com.google.protobuf.ByteString
        getCertificateBytes() {
      Object ref = certificate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        certificate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * issued certificate
     * </pre>
     *
     * <code>string Certificate = 2;</code>
     * @param value The certificate to set.
     * @return This builder for chaining.
     */
    public Builder setCertificate(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      certificate_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * issued certificate
     * </pre>
     *
     * <code>string Certificate = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCertificate() {
      
      certificate_ = getDefaultInstance().getCertificate();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * issued certificate
     * </pre>
     *
     * <code>string Certificate = 2;</code>
     * @param value The bytes for certificate to set.
     * @return This builder for chaining.
     */
    public Builder setCertificateBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      certificate_ = value;
      onChanged();
      return this;
    }

    private Object infraInterCert_ = "";
    /**
     * <pre>
     * infra intermediate cert
     * </pre>
     *
     * <code>string InfraInterCert = 3;</code>
     * @return The infraInterCert.
     */
    public String getInfraInterCert() {
      Object ref = infraInterCert_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        infraInterCert_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * infra intermediate cert
     * </pre>
     *
     * <code>string InfraInterCert = 3;</code>
     * @return The bytes for infraInterCert.
     */
    public com.google.protobuf.ByteString
        getInfraInterCertBytes() {
      Object ref = infraInterCert_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        infraInterCert_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * infra intermediate cert
     * </pre>
     *
     * <code>string InfraInterCert = 3;</code>
     * @param value The infraInterCert to set.
     * @return This builder for chaining.
     */
    public Builder setInfraInterCert(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      infraInterCert_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * infra intermediate cert
     * </pre>
     *
     * <code>string InfraInterCert = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearInfraInterCert() {
      
      infraInterCert_ = getDefaultInstance().getInfraInterCert();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * infra intermediate cert
     * </pre>
     *
     * <code>string InfraInterCert = 3;</code>
     * @param value The bytes for infraInterCert to set.
     * @return This builder for chaining.
     */
    public Builder setInfraInterCertBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      infraInterCert_ = value;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:rpc.SignResp)
  }

  // @@protoc_insertion_point(class_scope:rpc.SignResp)
  private static final SignResp DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new SignResp();
  }

  public static SignResp getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SignResp>
      PARSER = new com.google.protobuf.AbstractParser<SignResp>() {
    @Override
    public SignResp parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SignResp(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SignResp> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<SignResp> getParserForType() {
    return PARSER;
  }

  @Override
  public SignResp getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

