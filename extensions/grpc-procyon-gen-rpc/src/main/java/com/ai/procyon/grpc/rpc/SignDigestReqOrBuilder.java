// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: notary.proto

package com.ai.procyon.grpc.rpc;

public interface SignDigestReqOrBuilder extends
    // @@protoc_insertion_point(interface_extends:rpc.SignDigestReq)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * unique key id of the key-pair
   * </pre>
   *
   * <code>string KeyID = 1;</code>
   * @return The keyID.
   */
  String getKeyID();
  /**
   * <pre>
   * unique key id of the key-pair
   * </pre>
   *
   * <code>string KeyID = 1;</code>
   * @return The bytes for keyID.
   */
  com.google.protobuf.ByteString
      getKeyIDBytes();

  /**
   * <pre>
   * token to access this key-id
   * </pre>
   *
   * <code>string KeyToken = 2;</code>
   * @return The keyToken.
   */
  String getKeyToken();
  /**
   * <pre>
   * token to access this key-id
   * </pre>
   *
   * <code>string KeyToken = 2;</code>
   * @return The bytes for keyToken.
   */
  com.google.protobuf.ByteString
      getKeyTokenBytes();

  /**
   * <pre>
   * hash algo for signing
   * </pre>
   *
   * <code>string HashAlgo = 3;</code>
   * @return The hashAlgo.
   */
  String getHashAlgo();
  /**
   * <pre>
   * hash algo for signing
   * </pre>
   *
   * <code>string HashAlgo = 3;</code>
   * @return The bytes for hashAlgo.
   */
  com.google.protobuf.ByteString
      getHashAlgoBytes();

  /**
   * <pre>
   * digest to sign
   * </pre>
   *
   * <code>bytes Digest = 4;</code>
   * @return The digest.
   */
  com.google.protobuf.ByteString getDigest();
}
