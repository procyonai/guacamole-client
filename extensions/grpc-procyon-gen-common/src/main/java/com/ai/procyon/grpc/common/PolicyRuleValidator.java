// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: common.proto

package com.ai.procyon.grpc.common;

/**
* Validates {@code PolicyRule} protobuf objects.
*/
public class PolicyRuleValidator implements io.envoyproxy.pgv.ValidatorImpl<com.ai.procyon.grpc.common.PolicyRule>{
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		if (clazz.equals(com.ai.procyon.grpc.common.PolicyRule.class)) return new PolicyRuleValidator();
		
		return null;
	}
		
	
		
	
		
	
		
	
		
	
		
	
		
	
	

	public void assertValid(com.ai.procyon.grpc.common.PolicyRule proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			// Validate ObjectRef
			if (proto.hasObjectRef()) index.validatorFor(proto.getObjectRef()).assertValid(proto.getObjectRef());
	// no validation rules for Principal

	
			// Validate GcpRoleTarget
			if (proto.hasGcpRoleTarget()) index.validatorFor(proto.getGcpRoleTarget()).assertValid(proto.getGcpRoleTarget());
	
			// Validate Services
			if (proto.hasServices()) index.validatorFor(proto.getServices()).assertValid(proto.getServices());
	// no validation rules for ProcyonCreated

	
			io.envoyproxy.pgv.RepeatedValidation.forEach(proto.getRoleAssignmentsList(), item -> {
				
			// Validate RoleAssignments
			if (true) index.validatorFor(item).assertValid(item);
			});

	
			io.envoyproxy.pgv.RepeatedValidation.forEach(proto.getADRoleAssignmentsList(), item -> {
				
			// Validate ADRoleAssignments
			if (true) index.validatorFor(item).assertValid(item);
			});

	
	}

}

