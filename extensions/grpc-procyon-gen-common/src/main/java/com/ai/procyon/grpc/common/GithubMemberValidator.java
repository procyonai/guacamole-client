// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: common.proto

package com.ai.procyon.grpc.common;

/**
* Validates {@code GithubMember} protobuf objects.
*/
public class GithubMemberValidator implements io.envoyproxy.pgv.ValidatorImpl<com.ai.procyon.grpc.common.GithubMember>{
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		if (clazz.equals(com.ai.procyon.grpc.common.GithubMember.class)) return new GithubMemberValidator();
		
		return null;
	}
		
	
		
	
		
	
		
	
		
	
		
	
	

	public void assertValid(com.ai.procyon.grpc.common.GithubMember proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			// Validate memberRef
			if (proto.hasMemberRef()) index.validatorFor(proto.getMemberRef()).assertValid(proto.getMemberRef());
	// no validation rules for ManagedBy

	// no validation rules for Role

	// no validation rules for Status

	
			io.envoyproxy.pgv.RepeatedValidation.forEach(proto.getPermissionsList(), item -> {
				// no validation rules for Permissions

			});

	// no validation rules for ScimProvisonedIdentity

	
	}

}

